name: CI

on:
  push:
    branches: ['main']
    tags: ['**']
  pull_request:
  workflow_dispatch:

env:
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '1'

jobs:
  eslint:
    runs-on: ubuntu-latest
    container: node:16-alpine

    steps:
      - uses: actions/checkout@v3
      - run: corepack enable
      - run: corepack prepare yarn@stable --activate

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v3-

      - run: yarn install
      - run: yarn eslint:lint

  build:
    runs-on: ubuntu-latest
    container: node:16-alpine

    steps:
      - uses: actions/checkout@v3
      - run: yarn install --immutable
      - run: yarn run build

  test:
    runs-on: ubuntu-latest
    container: node:16-alpine

    steps:
      - uses: actions/checkout@v3
      - run: yarn install --immutable
      - run: yarn run test

  api-exporter:
    runs-on: ubuntu-latest
    container: node:16-alpine

    steps:
      - uses: actions/checkout@v3
      - run: yarn install --immutable
      - run: yarn run ts:build
      - run: yarn run ae:test

  playwright:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.20.0-focal

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_PASSWORD: 'contember'
          POSTGRES_USER: 'contember'
          POSTGRES_DB: 'contember'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      contember-engine:
        image: contember/engine:1.2.0
        env:
          NODE_ENV: 'development'
          CONTEMBER_PORT: '4000'
          CONTEMBER_ROOT_EMAIL: 'superadmin@localhost'
          CONTEMBER_ROOT_PASSWORD: 'superadmin@localhost'
          CONTEMBER_ROOT_TOKEN: '0000000000000000000000000000000000000000'
          CONTEMBER_LOGIN_TOKEN: '1111111111111111111111111111111111111111'
          CONTEMBER_ENCRYPTION_KEY: '0000000000000000000000000000000000000000000000000000000000000000'
          DEFAULT_DB_HOST: 'postgres'
          DEFAULT_DB_PORT: '5432'
          DEFAULT_DB_USER: 'contember'
          DEFAULT_DB_PASSWORD: 'contember'
          TENANT_DB_NAME: 'contember'
          DEFAULT_S3_ENDPOINT: 'http://minio:9000'
          DEFAULT_S3_PROVIDER: 'minio'
          DEFAULT_S3_REGION: ''
          DEFAULT_S3_BUCKET: 'contember'
          DEFAULT_S3_PREFIX: 'data'
          DEFAULT_S3_KEY: 'contember'
          DEFAULT_S3_SECRET: 'contember'

      minio:
        image: bitnami/minio

        env:
          MINIO_ROOT_USER: 'contember'
          MINIO_ROOT_PASSWORD: 'contember'
          MINIO_DEFAULT_BUCKETS: 'contember:download'

    env:
      VITE_CONTEMBER_ADMIN_API_BASE_URL: 'http://contember-engine:4000'
      VITE_CONTEMBER_ADMIN_SESSION_TOKEN: '0000000000000000000000000000000000000000'
      HOME: '/root'

    steps:
      - uses: actions/checkout@v3
      - run: yarn install --immutable
      - run: yarn workspaces foreach -pt build:js:prod
      - run: yarn workspace @contember/admin pw:build
      - run: yarn workspace @contember/admin pw:test --forbid-only

      - uses: jakejarvis/s3-sync-action@master
        if: always()
        with:
          args: --acl public-read
        env:
          AWS_S3_BUCKET: 'contember-admin'
          AWS_ACCESS_KEY_ID: ${{ secrets.PLAYWRIGHT_S3_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PLAYWRIGHT_S3_SECRET }}
          AWS_S3_ENDPOINT: 'https://fra1.digitaloceanspaces.com'
          SOURCE_DIR: 'packages/admin/tests/playwright/report'
          DEST_DIR: ${{ github.sha }}

      - uses: phulsechinmay/rewritable-pr-comment@v0.2.1
        if: always() && github.event_name == 'pull_request'
        with:
          message: '[Playwright Test Report](https://contember-admin.fra1.digitaloceanspaces.com/${{ github.sha }}/index.html)'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  publish-npm:
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ubuntu-latest
    container: node:16-alpine
    needs: [build, test, eslint, api-exporter]

    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - run: yarn install --immutable
      - run: yarn build
      - run: yarn config set "//registry.npmjs.org/:_authToken" "$NPM_TOKEN"
      - run: yarn config set "git-tag-version" "false"
      - run: yarn workspaces foreach set version "${GITHUB_REF:11}"
      - run: yarn workspaces foreach publish --access public --no-git-checks


  publish-docker:
    if: (github.event_name == 'push' && github.ref_type == 'tag') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: [build, test, eslint, api-exporter]

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Tag
        if: github.event_name == 'push' && github.ref_type == 'tag'
        run: 'echo "TAG=${GITHUB_REF:11}" >> $GITHUB_ENV'

      - name: Canary Tag
        if: github.event_name == 'workflow_dispatch'
        run: 'echo "TAG=canary-${GITHUB_SHA:0:10}" >> $GITHUB_ENV'

      - name: Build & Publish Docker Image
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login --username "$DOCKER_USER" --password "$DOCKER_PASSWORD"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file ee/admin-server/Dockerfile \
            --cache-from type=registry,ref=ghcr.io/contember/admin \
            --cache-to   type=registry,ref=ghcr.io/contember/admin,mode=max \
            --tag "contember/admin:$TAG" \
            --push \
            .
